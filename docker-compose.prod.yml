services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    expose:
      - 8000
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings-prod
      - DJANGO_SECRET_KEY=django-insecure-production-key-example
      - POSTGRES_DB=django_db_prod
      - POSTGRES_USER=django_user_prod
      - POSTGRES_PASSWORD=django_password_prod
    depends_on:
      db:
        condition: service_healthy
      memcached:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:latest
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=django_db_prod
      - POSTGRES_USER=django_user_prod
      - POSTGRES_PASSWORD=django_password_prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django_user_prod -d django_db_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  memcached:
    image: memcached:latest
    command: memcached -v
    healthcheck:
      test: ["CMD-SHELL", "pidof memcached || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "80:80"
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data_prod:
  static_volume:
  media_volume:
